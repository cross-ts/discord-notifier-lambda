AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  ApplicationName:
    Type: String
    Default: discord-notifier

Resources:
  DiscordNotifierIAM:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DiscordNotifierIAM
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
  AwsLambdaPowertoolsPythonLayer:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:eu-west-1:057560766410:applications/aws-lambda-powertools-python-layer
        SemanticVersion: 1.17.0
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref ApplicationName
      Role: !GetAtt DiscordNotifierIAM.Arn
      CodeUri: ./src
      Handler: index.handler
      Runtime: python3.8
      PackageType: Zip
      Tracing: Active
      Layers:
        - !GetAtt AwsLambdaPowertoolsPythonLayer.Outputs.LayerVersionArn
  LambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunction}
      RetentionInDays: 1
  InvocationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${ApplicationName}.fifo
      FifoQueue: True
  EventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: True
      EventSourceArn: !GetAtt InvocationQueue.Arn
      FunctionName: !Ref LambdaFunction

Outputs:
  DiscordNotifierQueueArn:
    Value: !GetAtt InvocationQueue.Arn
    Export:
      Name: DiscordNotifierQueueArn
